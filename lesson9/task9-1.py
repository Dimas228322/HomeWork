#1. Создать класс TrafficLight (светофор).
#Техническое задание:

#Хорошо подумайте какие из атрибутов являются атрибутами экземпляра, а какие класса.
#определить атрибут color (цвет) - приватный. Это текущий цвет светофора.
#Определить метод state (состояние), возвращающий текущий цвет в виде строки.


#определить метод running (запуск)
#в рамках метода реализовать переключение светофора в режимы(цвета): красный, жёлтый, зелёный.
#продолжительность первого состояния (красный) составляет 7 секунд, второго (жёлтый) — 2 секунды, третьего (зелёный) — на ваше усмотрение.
#Подумайте о том как хранить продолжительности. В виде какой структуры и в качестве атрибута чего?
#переключение между режимами должно осуществляться как у реального светофора: красный, жёлтый, зелёный, жёлтый, красный и т.д.
#метод многократно меняет текущий цвет светофора в соответствии с продолжительностями в секундах и печатает текущий цвет с помощью state.
#Предусмотреть разумное ограничение на количество итераций.

import time
from itertools import cycle
class TrafficLight:
    def __init__(self,ogran):
        self.ogran = ogran
        self.__color = {'7':'Красный',"2": 'Желтый',"1": 'Зеленый'}
        self.clr = None
    def state(self):
        return self.__color[self.clr]
    def running(self):
        posl = ['7','2','1','2']
        for i, j in enumerate(cycle(posl)):
            self.clr = j
            rez = f"{self.__color[j]}"
            time.sleep(int(j))
            print(rez)
            if i > self.ogran - 2:
                break
Svetofor = TrafficLight(4)
Svetofor.running()
